name: Validar Secrets y BigQuery
on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Permite ejecución manual

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.10'

      - name: Instalar dependencias (pip)
        run: |
          python -m pip install --upgrade pip
          pip install google-cloud-bigquery pyarrow pandas
      - name: Materializar credenciales de Google (Service Account)
        # Escribimos el JSON del Secret en un archivo temporal dentro del workspace
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > $RUNNER_TEMP/gcp-key.json
          # Opcional: ocultar longitud como sanity check
          echo "Credenciales escritas en archivo temporal."
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: Ejecutar validación de secrets + prueba BigQuery
        run: |
          python validate_secrets.py
        env:
          BEARER_TOKEN_1: ${{ secrets.BEARER_TOKEN_1 }}
          BEARER_TOKEN_2: ${{ secrets.BEARER_TOKEN_2 }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          # Google SDK espera esta variable apuntando al archivo:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp-key.json
          # Tabla objetivo
          BQ_TABLE_FQN: xpry-472917.xds.xtable

      - name: Reportar fallo (si ocurre)
        if: failure()
        run: echo "¡Fallo en la validación! Revisa los logs para detalles."
