name: Ejecutar Twitter BigQuery Diario

on:
  schedule:
    # Ejecutar todos los d√≠as a las 00:00 hora de Ecuador (05:00 UTC)
    - cron: "0 5 * * *"
  workflow_dispatch:  # Permite ejecuci√≥n manual desde la pesta√±a "Actions"

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      # üß± 1Ô∏è‚É£ Clonar el repositorio
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # üêç 2Ô∏è‚É£ Configurar Python
      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # üì¶ 3Ô∏è‚É£ Instalar dependencias
      - name: Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # üîë 4Ô∏è‚É£ Configurar credenciales de Google Cloud (BigQuery)
      # ‚ö†Ô∏è Agrega tu JSON de servicio como secreto llamado GOOGLE_APPLICATION_CREDENTIALS_JSON
      - name: Crear archivo de credenciales
        env:
          GCP_JSON_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
        run: |
          echo "$GCP_JSON_KEY" > service_account.json
        shell: bash

      # üìÅ 5Ô∏è‚É£ Crear archivo temporal para logs
      - name: Crear archivo de log vac√≠o
        run: echo "Inicio de ejecuci√≥n del workflow" > xlog.log

      # üß© 6Ô∏è‚É£ Crear archivos de tokens a partir de los secretos
      - name: Crear archivos de tokens
        env:
          BEARER_TOKEN_1: ${{ secrets.BEARER_TOKEN_1 }}
          BEARER_TOKEN_2: ${{ secrets.BEARER_TOKEN_2 }}
        run: |
          echo "BEARER_TOKEN=${BEARER_TOKEN_1}" > xtoken1.env
          echo "BEARER_TOKEN=${BEARER_TOKEN_2}" > xtoken2.env
        shell: bash

      # üöÄ 7Ô∏è‚É£ Ejecutar script principal
      - name: Ejecutar main.py
        env:
          # üîê Variables de entorno y rutas
          XLOG_PATH: xlog.log
          XTOKEN1_PATH: xtoken1.env
          XTOKEN2_PATH: xtoken2.env
          GOOGLE_APPLICATION_CREDENTIALS_PATH: service_account.json
          BQ_TABLE_ID: xpry-472917.xds.xtable
          GCP_PROJECT: xpry-472917
          GITHUB_ACTIONS: true

          # üîë Credenciales
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/service_account.json
        run: |
          python main.py

      # üì§ 8Ô∏è‚É£ Subir archivo de logs como artifact
      - name: Subir log como artifact
        uses: actions/upload-artifact@v4
        with:
          name: xlog-log
          path: xlog.log
          retention-days: 7
