name: 🚀 Ejecutar main.py y subir logs

on:
  schedule:
    # Ejecutar automáticamente todos los días a las 14:00 UTC (09:00 hora Ecuador)
    - cron: "0 14 * * *"
  workflow_dispatch: # Permitir ejecución manual

jobs:
  run-twitter-bq:
    runs-on: ubuntu-latest
    env:
      BQ_TABLE_FQN: xpry-472917.xds.xtable
      BEARER_TOKEN_1: ${{ secrets.BEARER_TOKEN_1 }}
      BEARER_TOKEN_2: ${{ secrets.BEARER_TOKEN_2 }}
      GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

    steps:
      - name: 📦 Checkout del repositorio
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: 📦 Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔐 Materializar credenciales de Google
        run: |
          echo "${GOOGLE_APPLICATION_CREDENTIALS_JSON}" > $RUNNER_TEMP/gcp-key.json
          echo "✅ Credenciales de servicio escritas en archivo temporal."
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: 🌍 Establecer variable de entorno para Google
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/gcp-key.json" >> $GITHUB_ENV

      - name: 🚀 Ejecutar script principal
        run: |
          echo "▶️ Iniciando ejecución de main.py..."
          python main.py > xlog.log 2>&1
          echo "✅ Ejecución finalizada."

      - name: 📤 Subir log como artifact
        uses: actions/upload-artifact@v4
        with:
          name: xlog-log
          path: xlog.log
