name: schedule
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout del repositorio
        uses: actions/checkout@v4

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Instalar dependencias
        run: |
          python -m pip install --upgrade pip
          pip install tweepy google-cloud-bigquery pyarrow pandas
          echo "✅ Dependencias instaladas correctamente."
          pip show google-cloud-bigquery tweepy

      - name: 🔐 Materializar credenciales de Google
        run: |
          echo "${GOOGLE_APPLICATION_CREDENTIALS_JSON}" | base64 --decode > $RUNNER_TEMP/gcp-key.json
          echo "✅ Credenciales de servicio escritas en archivo temporal."
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: 🧪 Validar Tokens de Twitter y conexión a BigQuery
        run: python main.py
        env:
          BEARER_TOKEN_1: ${{ secrets.BEARER_TOKEN_1 }}
          BEARER_TOKEN_2: ${{ secrets.BEARER_TOKEN_2 }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp-key.json
          BQ_TABLE_FQN: xpry-472917.xds.xtable

      - name: 🕵️‍♂️ Obtener tweets y cargarlos a BigQuery
        run: python xtwitter_to_bigquery.py
        env:
          BEARER_TOKEN_1: ${{ secrets.BEARER_TOKEN_1 }}
          BEARER_TOKEN_2: ${{ secrets.BEARER_TOKEN_2 }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/gcp-key.json
          BQ_TABLE_FQN: xpry-472917.xds.xtable

      # ✅ Este bloque ahora son DOS pasos separados correctamente:
      - name: 🧾 Copiar logs generados (si existen)
        if: always()
        run: |
          mkdir -p logs
          cp -v *.log logs/ 2>/dev/null || echo "No se encontraron archivos .log"

      - name: 📤 Subir logs como artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: workflow-logs
          path: logs/
